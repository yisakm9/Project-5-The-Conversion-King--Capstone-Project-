# .github/workflows/deploy-dev.yml

name: 'Terraform CI/CD for Dev'

on:
  push:
    branches:
      - main
    paths:
      - 'environments/dev/**'
      - 'modules/**'
  pull_request:
    branches:
      - main
    paths:
      - 'environments/dev/**'
      - 'modules/**'
  workflow_dispatch:

permissions:
  id-token: write      # Required for OIDC authentication to AWS
  contents: read       # Required to checkout the repository
  pull-requests: write # Required to post plan comments on the PR

jobs:
  # JOB 1: Plan and Validate on Pull Requests
  terraform-plan:
    name: 'Terraform Plan & Analysis'
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'

    defaults:
      run:
        shell: bash
        working-directory: ./environments/dev

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::456202167790:role/githubaction # YOUR IAM ROLE ARN
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Run TFLint (Best Practices Linter)
        uses: terraform-linters/setup-tflint@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tflint_version: latest

      - name: Run Checkov (Security Scanner)
        uses: bridgecrewio/checkov-action@master
        with:
          directory: ./
          framework: terraform
          output_format: cli
          soft_fail: true # Fails the build for critical errors

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -out=tfplan

      - name: Format Plan Output for PR Comment
        id: format-plan
        run: |
          # The `terraform-pr-commenter` has known issues. A simple show is more reliable.
          PLAN_OUTPUT=$(terraform show -no-color tfplan)
          COMMENT_BODY="#### Terraform Plan for Dev ðŸ“–\`\`\`terraform\n$PLAN_OUTPUT\n\`\`\`"
          echo "COMMENT_BODY<<EOF" >> $GITHUB_ENV
          echo "$COMMENT_BODY" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Post Plan to PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            const botComment = comments.find(comment => comment.body.includes('Terraform Plan for Dev'));
            const newBody = `${process.env.COMMENT_BODY}`;
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: newBody
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: newBody
              });
            }

  # JOB 2: Apply on Merge to Main
  terraform-apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    needs: terraform-plan # This job will not run for PRs because of the `if` condition below
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    defaults:
      run:
        shell: bash
        working-directory: ./environments/dev
        
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::456202167790:role/githubaction # YOUR IAM ROLE ARN
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve